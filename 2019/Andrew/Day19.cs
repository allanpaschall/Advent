using System;
using System.Collections.Generic;
using System.Linq;
namespace AoC2019
{
    public class Day19
    {
        public Day19()
        {
        }
        public void Run()
        {
            var begin = DateTime.Now;
            Dictionary<int, long> points = new Dictionary<int, long>();
            var i = new IntCode(Data);
            long output = 0;
            long firstX = 0;
            for (int p1 = 0; p1 < 2500; p1++)
            {
                i = new IntCode(Data);
                i.Input.Enqueue(p1%50);
                i.Input.Enqueue(p1/50);
                i.Run();
                output += i.Output.Dequeue();
            }
            Console.WriteLine("Day 19,P1:" + output + ", completed in " + (System.DateTime.Now - begin).TotalMilliseconds + " milliseconds");
            begin = DateTime.Now;
            long P2Output = 0;
            for (int yy = 0; yy < 10000 && P2Output==0; yy++)
            {
                bool seenX = false;
                for (int xx = (int)firstX; xx < 10000 && P2Output==0; xx++)
                {
                    i = new IntCode(Data);
                    i.Input.Enqueue(xx);
                    i.Input.Enqueue(yy);
                    i.Run();
                    var data = i.Output.Dequeue();
                    points[xx * 10000 + yy] = data;
                    if (data == 1 && seenX == false)
                    {
                        firstX = xx==0 ? 0 : xx-1;
                    }
                    seenX |= data == 1;
                    if (points.ContainsKey((xx * 10000) + yy) &&
                        points.ContainsKey((xx * 10000) + (yy - 99)) &&
                        points.ContainsKey(((xx + 99) * 10000) + yy - 99) &&
                        points[(xx * 10000) + yy] == 1 &&
                        points[(xx * 10000) + (yy - 99)] == 1 &&
                        points[((xx + 99) * 10000) + (yy - 99)] == 1)
                    {
                        P2Output = xx * 10000 + (yy - 99);
                    }
                    if (data == 0 && seenX == true)
                        break;
                }
            }
            Console.WriteLine("Day 19,P2:" + P2Output + ", completed in " + (System.DateTime.Now - begin).TotalMilliseconds + " milliseconds");
        }


        public long[] Data = { 109,424,203,1,21101,11,0,0,1105,1,282,21102,1,18,0,1105,1,259,2102,1,1,221,203,1,21102,1,31,0,1106,0,282,21101,38,0,0,1105,1,259,20102,1,23,2,21202,1,1,3,21102,1,1,1,21102,57,1,0,1105,1,303,2102,1,1,222,21002,221,1,3,21002,221,1,2,21102,1,259,1,21102,1,80,0,1105,1,225,21102,145,1,2,21102,91,1,0,1106,0,303,1201,1,0,223,20102,1,222,4,21102,259,1,3,21101,225,0,2,21102,1,225,1,21101,0,118,0,1105,1,225,21001,222,0,3,21101,91,0,2,21102,1,133,0,1106,0,303,21202,1,-1,1,22001,223,1,1,21102,148,1,0,1105,1,259,1201,1,0,223,21001,221,0,4,20101,0,222,3,21101,20,0,2,1001,132,-2,224,1002,224,2,224,1001,224,3,224,1002,132,-1,132,1,224,132,224,21001,224,1,1,21102,195,1,0,105,1,109,20207,1,223,2,20101,0,23,1,21102,-1,1,3,21101,0,214,0,1105,1,303,22101,1,1,1,204,1,99,0,0,0,0,109,5,1202,-4,1,249,22101,0,-3,1,22102,1,-2,2,21202,-1,1,3,21102,1,250,0,1106,0,225,21201,1,0,-4,109,-5,2105,1,0,109,3,22107,0,-2,-1,21202,-1,2,-1,21201,-1,-1,-1,22202,-1,-2,-2,109,-3,2106,0,0,109,3,21207,-2,0,-1,1206,-1,294,104,0,99,21201,-2,0,-2,109,-3,2105,1,0,109,5,22207,-3,-4,-1,1206,-1,346,22201,-4,-3,-4,21202,-3,-1,-1,22201,-4,-1,2,21202,2,-1,-1,22201,-4,-1,1,21201,-2,0,3,21102,343,1,0,1106,0,303,1105,1,415,22207,-2,-3,-1,1206,-1,387,22201,-3,-2,-3,21202,-2,-1,-1,22201,-3,-1,3,21202,3,-1,-1,22201,-3,-1,2,22101,0,-4,1,21101,384,0,0,1105,1,303,1105,1,415,21202,-4,-1,-4,22201,-4,-3,-4,22202,-3,-2,-2,22202,-2,-4,-4,22202,-3,-2,-3,21202,-4,-1,-2,22201,-3,-2,1,21202,1,1,-4,109,-5,2105,1,0 };

    }
}
